/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Controller.ControllerAcrededores;
import Controller.ImplListaEnlazada;
import Controller.ImplTablaHash;
import Interfaces.IControllerAcrededores;
import Models.Acrededores;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Andre H
 */
public class Panel_Estadisticas extends javax.swing.JPanel {

    private ControllerAcrededores controlador;
     IControllerAcrededores controllerAcrededores = new ControllerAcrededores();


    public Panel_Estadisticas() {
        initComponents();
        controlador = new ControllerAcrededores();
        showBarChart();
    }

    public void showBarChart(){
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(200, "Amount", "january");
        dataset.setValue(150, "Amount", "february");
        dataset.setValue(18, "Amount", "march");
        dataset.setValue(100, "Amount", "april");
        dataset.setValue(80, "Amount", "may");
        dataset.setValue(250, "Amount", "june");
        
        JFreeChart chart = ChartFactory.createBarChart("contribution","monthly","amount", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        CategoryPlot categoryPlot = chart.getCategoryPlot();
        //categoryPlot.setRangeGridlinePaint(Color.BLUE);
        categoryPlot.setBackgroundPaint(Color.WHITE);
        BarRenderer renderer = (BarRenderer) categoryPlot.getRenderer();
        Color clr3 = new Color(204,0,51);
        renderer.setSeriesPaint(0, clr3);
        
        ChartPanel barpChartPanel = new ChartPanel(chart);
        panelBarChart.removeAll();
        panelBarChart.add(barpChartPanel, BorderLayout.CENTER);
        panelBarChart.validate();       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Opciones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEstadisticas = new javax.swing.JTable();
        radioDeProDis = new javax.swing.JRadioButton();
        radioDePli = new javax.swing.JRadioButton();
        radioDeDocu = new javax.swing.JRadioButton();
        departamentoFiltro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        panelBarChart = new javax.swing.JPanel();
        btnExportarPDF = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tableEstadisticas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Lugar", "Deuda"
            }
        ));
        jScrollPane1.setViewportView(tableEstadisticas);

        radioDeProDis.setBackground(new java.awt.Color(255, 255, 255));
        Opciones.add(radioDeProDis);
        radioDeProDis.setText("Departamento, Provincia, Distrito");
        radioDeProDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDeProDisActionPerformed(evt);
            }
        });

        radioDePli.setBackground(new java.awt.Color(255, 255, 255));
        Opciones.add(radioDePli);
        radioDePli.setText("Departamento y Pliego");
        radioDePli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDePliActionPerformed(evt);
            }
        });

        radioDeDocu.setBackground(new java.awt.Color(255, 255, 255));
        Opciones.add(radioDeDocu);
        radioDeDocu.setText("Departamento y Tipo de Documento");
        radioDeDocu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDeDocuActionPerformed(evt);
            }
        });

        departamentoFiltro.setBackground(new java.awt.Color(255, 255, 255));
        departamentoFiltro.setForeground(new java.awt.Color(0, 0, 0));
        departamentoFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AMAZONAS", "ANCASH", "APURIMAC", "AREQUIPA", "AYACUCHO", "CAJAMARCA", "CALLAO", "CUSCO", "HUANCAVELICA", "HUANUCO", "ICA", "JUNIN", "LA LIBERTAD", "LAMBAYEQUE", "LIMA", "LORETO", "MADRE DE DIOS", "MOQUEGUA", "PASCO", "PIURA", "PUNO", "SAN MARTIN", "TACNA", "TUMBES", "UCAYALI" }));
        departamentoFiltro.setBorder(null);
        departamentoFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentoFiltroActionPerformed(evt);
            }
        });

        jLabel1.setText("Elegir Departamento");

        panelBarChart.setLayout(new java.awt.BorderLayout());

        btnExportarPDF.setBackground(new java.awt.Color(255, 161, 1));
        btnExportarPDF.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExportarPDF.setForeground(new java.awt.Color(255, 255, 255));
        btnExportarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icons8-register-20.png"))); // NOI18N
        btnExportarPDF.setText("Descargar PDF");
        btnExportarPDF.setBorder(null);
        btnExportarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(departamentoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioDeProDis)
                                .addGap(18, 18, 18)
                                .addComponent(radioDeDocu)))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnExportarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(115, 115, 115)))
                    .addComponent(radioDePli))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioDeProDis)
                    .addComponent(radioDeDocu)
                    .addComponent(radioDePli))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departamentoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioDeProDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDeProDisActionPerformed
        // TODO add your handling code here:
        ImplTablaHash<String, Double> resultado = controlador.montosAcumuladosPorDepartamentoProvinciaDistrito();
        actualizarTabla(resultado);
    }//GEN-LAST:event_radioDeProDisActionPerformed

    private void radioDePliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDePliActionPerformed
        // TODO add your handling code here:
        ImplTablaHash<String, Double> resultado = controlador.totalesAcumuladosPorNivelDeGobiernoDepartamentoYPliego();
        actualizarTabla(resultado);
    }//GEN-LAST:event_radioDePliActionPerformed

    private void radioDeDocuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDeDocuActionPerformed
        // TODO add your handling code here:
        ImplTablaHash<String, Double> resultado = controlador.cantidadesYTotalesPorDepartamentoYTipoDeDocumento();
        actualizarTabla(resultado);       
    }//GEN-LAST:event_radioDeDocuActionPerformed

    private void departamentoFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentoFiltroActionPerformed
        // TODO add your handling code here:
        String departamentoSeleccionado = (String) departamentoFiltro.getSelectedItem();

        // Obtener los datos actuales de la tabla
        ImplTablaHash<String, Double> datosActuales = new ImplTablaHash<>();
        DefaultTableModel model = (DefaultTableModel) tableEstadisticas.getModel();
        int rowCount = model.getRowCount();

        for (int i = 0; i < rowCount; i++) {
            String lugar = (String) model.getValueAt(i, 0);
            Double deuda = (Double) model.getValueAt(i, 1);
            datosActuales.put(lugar, deuda);
        }

        // Filtrar los datos por el departamento seleccionado
        ImplTablaHash<String, Double> resultado = controlador.filtrarPorDepartamento(datosActuales, departamentoSeleccionado);

        // Actualizar la tabla con los resultados filtrados
        actualizarTabla(resultado);
        
        actualizarBarChart(resultado, departamentoSeleccionado);
    }//GEN-LAST:event_departamentoFiltroActionPerformed

    private void btnExportarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarPDFActionPerformed
       JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Guardar como PDF");
    
    int userSelection = fileChooser.showSaveDialog(this);
    if (userSelection == JFileChooser.APPROVE_OPTION) {
        File fileToSave = fileChooser.getSelectedFile();
        String filePath = fileToSave.getAbsolutePath();
        
        if (!filePath.endsWith(".pdf")) {
            filePath += ".pdf";
        }
        
        // Obtener los datos actuales de la tabla
        DefaultTableModel model = (DefaultTableModel) tableEstadisticas.getModel();
        ImplListaEnlazada<Acrededores> datosActuales = new ImplListaEnlazada<>();

        // Recorrer la tabla y agregar los datos a la lista enlazada
        for (int i = 0; i < model.getRowCount(); i++) {
            String lugar = (String) model.getValueAt(i, 0);
            Double deuda = (Double) model.getValueAt(i, 1);
            Acrededores acreedor = new Acrededores(lugar, deuda); // Crear objeto Acrededores según tus datos
            datosActuales.insertar(acreedor, datosActuales.getTamaño());
        }

        // Llamar al método de exportación a PDF del controlador
        controllerAcrededores.exportarAPDF(datosActuales, filePath);

        // Confirmar al usuario que se ha exportado el archivo
        JOptionPane.showMessageDialog(this, "Tabla exportada correctamente a PDF.", "Exportación Exitosa", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_btnExportarPDFActionPerformed
    private void actualizarTabla(ImplTablaHash<String, Double> datos) {
        DefaultTableModel model = (DefaultTableModel) tableEstadisticas.getModel();
        model.setRowCount(0); // Limpiar la tabla

        for (Map.Entry<String, Double> entry : datos.entrySet()) {
            model.addRow(new Object[]{entry.getKey(), entry.getValue()});
        }
    }
    
    private void actualizarBarChart(ImplTablaHash<String, Double> datos, String departamento) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for (Map.Entry<String, Double> entry : datos.entrySet()) {
            String[] partes = entry.getKey().split("-");
            String provinciaDistrito = partes[1] + "-" + partes[2];
            dataset.setValue(entry.getValue(), "Deuda", provinciaDistrito);
        }

        JFreeChart chart = ChartFactory.createBarChart("Deuda en " + departamento, "Provincia-Distrito", "Monto", 
                dataset, PlotOrientation.VERTICAL, false, true, false);

        CategoryPlot categoryPlot = chart.getCategoryPlot();
        categoryPlot.setBackgroundPaint(Color.WHITE);
        BarRenderer renderer = (BarRenderer) categoryPlot.getRenderer();
        Color clr3 = new Color(204, 0, 51);
        renderer.setSeriesPaint(0, clr3);

        ChartPanel barChartPanel = new ChartPanel(chart);
        panelBarChart.removeAll();
        panelBarChart.add(barChartPanel, BorderLayout.CENTER);
        panelBarChart.validate();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Opciones;
    private javax.swing.JButton btnExportarPDF;
    private javax.swing.JComboBox<String> departamentoFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelBarChart;
    private javax.swing.JRadioButton radioDeDocu;
    private javax.swing.JRadioButton radioDePli;
    private javax.swing.JRadioButton radioDeProDis;
    private javax.swing.JTable tableEstadisticas;
    // End of variables declaration//GEN-END:variables
}
