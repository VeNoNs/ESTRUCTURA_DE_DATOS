/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Controller.ControllerAcrededores;
import Controller.ImplTablaHash;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Andre H
 */
public class Panel_Estadisticas extends javax.swing.JPanel {

    private ControllerAcrededores controlador;

    public Panel_Estadisticas() {
        initComponents();
        controlador = new ControllerAcrededores();
        showPieChart();
    }

    public void showPieChart() {

        //create dataset
        DefaultPieDataset barDataset = new DefaultPieDataset();

        barDataset.setValue("Arequipa", 50);
        barDataset.setValue("Islay", 10);
        barDataset.setValue("Castilla", 30);
        barDataset.setValue("Camaná", 10);

        //create chart
        JFreeChart piechart = ChartFactory.createPieChart("Arequipa", barDataset, false, true, false);//explain

        PiePlot piePlot = (PiePlot) piechart.getPlot();

        //changing pie chart blocks colors
        piePlot.setSectionPaint("Arequipa", new Color(255, 255, 102));
        piePlot.setSectionPaint("Islay", new Color(102, 255, 102));
        piePlot.setSectionPaint("Castilla", new Color(255, 102, 153));
        piePlot.setSectionPaint("Camaná", new Color(0, 204, 204));

        piePlot.setBackgroundPaint(Color.white);

        //create chartPanel to display chart(graph)
        ChartPanel barChartPanel = new ChartPanel(piechart);

        panelBarChart.removeAll();
        panelBarChart.add(barChartPanel, BorderLayout.CENTER);
        panelBarChart.validate();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Opciones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEstadisticas = new javax.swing.JTable();
        radioDeProDis = new javax.swing.JRadioButton();
        radioDePli = new javax.swing.JRadioButton();
        radioDeDocu = new javax.swing.JRadioButton();
        departamentoFiltro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        panelBarChart = new javax.swing.JPanel();
        btnExportarPDF = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tableEstadisticas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Lugar", "Deuda"
            }
        ));
        jScrollPane1.setViewportView(tableEstadisticas);

        radioDeProDis.setBackground(new java.awt.Color(255, 255, 255));
        Opciones.add(radioDeProDis);
        radioDeProDis.setText("Departamento, Provincia, Distrito");
        radioDeProDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDeProDisActionPerformed(evt);
            }
        });

        radioDePli.setBackground(new java.awt.Color(255, 255, 255));
        Opciones.add(radioDePli);
        radioDePli.setText("Departamento y Pliego");
        radioDePli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDePliActionPerformed(evt);
            }
        });

        radioDeDocu.setBackground(new java.awt.Color(255, 255, 255));
        Opciones.add(radioDeDocu);
        radioDeDocu.setText("Departamento y Tipo de Documento");
        radioDeDocu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDeDocuActionPerformed(evt);
            }
        });

        departamentoFiltro.setBackground(new java.awt.Color(255, 255, 255));
        departamentoFiltro.setForeground(new java.awt.Color(0, 0, 0));
        departamentoFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AMAZONAS", "ANCASH", "APURIMAC", "AREQUIPA", "AYACUCHO", "CAJAMARCA", "CALLAO", "CUSCO", "HUANCAVELICA", "HUANUCO", "ICA", "JUNIN", "LA LIBERTAD", "LAMBAYEQUE", "LIMA", "LORETO", "MADRE DE DIOS", "MOQUEGUA", "PASCO", "PIURA", "PUNO", "SAN MARTIN", "TACNA", "TUMBES", "UCAYALI" }));
        departamentoFiltro.setBorder(null);
        departamentoFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentoFiltroActionPerformed(evt);
            }
        });

        jLabel1.setText("Elegir Departamento");

        panelBarChart.setLayout(new java.awt.BorderLayout());

        btnExportarPDF.setBackground(new java.awt.Color(255, 161, 1));
        btnExportarPDF.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExportarPDF.setForeground(new java.awt.Color(255, 255, 255));
        btnExportarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icons8-register-20.png"))); // NOI18N
        btnExportarPDF.setText("Descargar PDF");
        btnExportarPDF.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(departamentoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(radioDePli)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioDeProDis)
                                .addGap(18, 18, 18)
                                .addComponent(radioDeDocu))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnExportarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 115, 115)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioDeProDis)
                    .addComponent(radioDeDocu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDePli)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departamentoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioDeProDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDeProDisActionPerformed
        // TODO add your handling code here:
        ImplTablaHash<String, Double> resultado = controlador.montosAcumuladosPorDepartamentoProvinciaDistrito();
        actualizarTabla(resultado);
    }//GEN-LAST:event_radioDeProDisActionPerformed

    private void radioDePliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDePliActionPerformed
        // TODO add your handling code here:
        ImplTablaHash<String, Double> resultado = controlador.totalesAcumuladosPorNivelDeGobiernoDepartamentoYPliego();
        actualizarTabla(resultado);
    }//GEN-LAST:event_radioDePliActionPerformed

    private void radioDeDocuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDeDocuActionPerformed
        // TODO add your handling code here:
        ImplTablaHash<String, Double> resultado = controlador.cantidadesYTotalesPorDepartamentoYTipoDeDocumento();
        actualizarTabla(resultado);
    }//GEN-LAST:event_radioDeDocuActionPerformed

    private void departamentoFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentoFiltroActionPerformed
        // TODO add your handling code here:
        String departamentoSeleccionado = (String) departamentoFiltro.getSelectedItem();

        // Obtener los datos actuales de la tabla
        ImplTablaHash<String, Double> datosActuales = new ImplTablaHash<>();
        DefaultTableModel model = (DefaultTableModel) tableEstadisticas.getModel();
        int rowCount = model.getRowCount();

        for (int i = 0; i < rowCount; i++) {
            String lugar = (String) model.getValueAt(i, 0);
            Double deuda = (Double) model.getValueAt(i, 1);
            datosActuales.put(lugar, deuda);
        }

        // Filtrar los datos por el departamento seleccionado
        ImplTablaHash<String, Double> resultado = controlador.filtrarPorDepartamento(datosActuales, departamentoSeleccionado);

        // Actualizar la tabla con los resultados filtrados
        actualizarTabla(resultado);
    }//GEN-LAST:event_departamentoFiltroActionPerformed
    private void actualizarTabla(ImplTablaHash<String, Double> datos) {
        DefaultTableModel model = (DefaultTableModel) tableEstadisticas.getModel();
        model.setRowCount(0); // Limpiar la tabla

        for (Map.Entry<String, Double> entry : datos.entrySet()) {
            model.addRow(new Object[]{entry.getKey(), entry.getValue()});
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Opciones;
    private javax.swing.JButton btnExportarPDF;
    private javax.swing.JComboBox<String> departamentoFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelBarChart;
    private javax.swing.JRadioButton radioDeDocu;
    private javax.swing.JRadioButton radioDePli;
    private javax.swing.JRadioButton radioDeProDis;
    private javax.swing.JTable tableEstadisticas;
    // End of variables declaration//GEN-END:variables
}
